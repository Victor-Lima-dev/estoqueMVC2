// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using estoqueMVC2.context;

#nullable disable

namespace estoqueMVC2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("estoqueMVC2.Models.Estoque", b =>
                {
                    b.Property<int>("EstoqueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstoqueId"));

                    b.HasKey("EstoqueId");

                    b.ToTable("Estoques");
                });

            modelBuilder.Entity("estoqueMVC2.Models.ItemEstoque", b =>
                {
                    b.Property<int>("ItemEstoqueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemEstoqueId"));

                    b.Property<int>("EstoqueId")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int?>("RelatorioId")
                        .HasColumnType("int");

                    b.HasKey("ItemEstoqueId");

                    b.HasIndex("EstoqueId");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("RelatorioId");

                    b.ToTable("ItensEstoque");
                });

            modelBuilder.Entity("estoqueMVC2.Models.Produto", b =>
                {
                    b.Property<int>("ProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdutoId"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataValidade")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("RelatorioId")
                        .HasColumnType("int");

                    b.HasKey("ProdutoId");

                    b.HasIndex("RelatorioId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("estoqueMVC2.Models.Relatorio", b =>
                {
                    b.Property<int>("RelatorioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RelatorioId"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstoqueId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RelatorioId");

                    b.HasIndex("EstoqueId");

                    b.ToTable("Relatorios");
                });

            modelBuilder.Entity("estoqueMVC2.Models.ItemEstoque", b =>
                {
                    b.HasOne("estoqueMVC2.Models.Estoque", "Estoque")
                        .WithMany("ItensEstoque")
                        .HasForeignKey("EstoqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("estoqueMVC2.Models.Produto", "Produto")
                        .WithMany("ItensEstoque")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("estoqueMVC2.Models.Relatorio", "Relatorio")
                        .WithMany("ItensEstoque")
                        .HasForeignKey("RelatorioId");

                    b.Navigation("Estoque");

                    b.Navigation("Produto");

                    b.Navigation("Relatorio");
                });

            modelBuilder.Entity("estoqueMVC2.Models.Produto", b =>
                {
                    b.HasOne("estoqueMVC2.Models.Relatorio", "Relatorio")
                        .WithMany("Produtos")
                        .HasForeignKey("RelatorioId");

                    b.Navigation("Relatorio");
                });

            modelBuilder.Entity("estoqueMVC2.Models.Relatorio", b =>
                {
                    b.HasOne("estoqueMVC2.Models.Estoque", "Estoque")
                        .WithMany()
                        .HasForeignKey("EstoqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estoque");
                });

            modelBuilder.Entity("estoqueMVC2.Models.Estoque", b =>
                {
                    b.Navigation("ItensEstoque");
                });

            modelBuilder.Entity("estoqueMVC2.Models.Produto", b =>
                {
                    b.Navigation("ItensEstoque");
                });

            modelBuilder.Entity("estoqueMVC2.Models.Relatorio", b =>
                {
                    b.Navigation("ItensEstoque");

                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
